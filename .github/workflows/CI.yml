name: QUnit IE

on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        INCLUDE: [
            Bootstrap Integration,
            Bundles,
            DevExpress,
            DevExpress.angular,
            DevExpress.animation,
            DevExpress.aspnet,
            DevExpress.core,
            DevExpress.data,
            DevExpress.exporter,
            DevExpress.jquery,
            DevExpress.knockout,
            DevExpress.localization,
            DevExpress.serverSide,
            DevExpress.ui,
            DevExpress.ui.events,
            DevExpress.ui.widgets,
            DevExpress.ui.widgets.dataGrid,
            DevExpress.ui.widgets.diagram,
            DevExpress.ui.widgets.editors,
            DevExpress.ui.widgets.fileManager,
            DevExpress.ui.widgets.form,
            DevExpress.ui.widgets.pivotGrid,
            DevExpress.ui.widgets.scheduler,
            DevExpress.ui.widgets.treeList,
            DevExpress.utils,
            DevExpress.viz.charts,
            DevExpress.viz.core,
            DevExpress.viz.core.series,
            DevExpress.viz.funnel,
            DevExpress.viz.gauges,
            DevExpress.viz.rangeSelector,
            DevExpress.viz.renderers,
            DevExpress.viz.sankey,
            DevExpress.viz.sparklines,
            DevExpress.viz.treeMap,
            DevExpress.viz.vectorMap,
            DevExpress.viz.vectorMap.utils,
            Memory Leaks
        ]

    runs-on: windows-latest
    timeout-minutes: 60

    steps:
    - name: Get sources
      uses: actions/checkout@v2

    - name: Restore npm cache
      uses: actions/cache@v1
      with:
        path: .\node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node

    - name: Run npm install
      run: npm install --no-package-lock --no-audit --no-fund

    - name: Build
      env:
        DEVEXTREME_TEST_CI: "true"
        DOTNET_CLI_TELEMETRY_OPTOUT: "true"
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
      run: npx npm-run-all -p build transpile-tests

    - name: Run QUnit tests
      env:
        INCLUDE: ${{ matrix.INCLUDE }}
      run: |
        $runner = Start-Process -FilePath dotnet -ArgumentList './testing/runner/bin/runner.dll --single-run' -PassThru -NoNewWindow
        Write-Host "Runner starting"
        $runner_host = "http://localhost:20050"
        $attempt_count = 30
        For ($i=0; $i -lt $attempt_count; $i++) {
          try {
            Invoke-WebRequest $runner_host -Method 'HEAD' -TimeoutSec 5 | Out-Null
            break
          }
          catch {
            Write-Host "Waiting for runner... Attempt $i"
            Start-Sleep -s 1
          }
        }
        If ($i -eq $attempt_count) {
          Write-Host "Runner doesn't respond"
          exit 1
        }
        Write-Host "Runner started"
        $url = "$runner_host/run?notimers=true&nojquery=true&include=$env:INCLUDE"
        & "C:\Program Files\Internet Explorer\iexplore.exe" "$url"
        Write-Host "IE started"
        Wait-Process -InputObject $runner
        Write-Host "Runner finished"
        exit $runner.ExitCode
